1- package main

import "fmt"

func main() {
	var n int
	x := 4

	somaNaturais(&n, x)

	fmt.Println("A soma é igual a: ", n)
}

func somaNaturais(n *int, x int) {
	soma := 0
	for i := 1; i <= x; i++ {
		soma += i
	}
	*n = soma
}

2-package main

import "fmt"

func main() {
	var n int
	var x *int

	fmt.Println("O programa irá transformar os pares em 0 e ímpares em 1")
	fmt.Print("Digite um número: ")
	fmt.Scan(&n)
	x = &n
	oddOrEven(x)
	fmt.Print("Novo valor do número: ", n)
}

func oddOrEven(x *int) {
	if *x%2 == 0 {
		*x = 0
	} else {
		*x = 1
	}
}

3-package main

import "fmt"

func atualizar(nome *string) {
	s := []rune(*nome)
	n := len(s)

	for i, j := 0, n-1; i < j; i, j = i+1, j-1 {
		s[i], s[j] = s[j], s[i]
	}
	*nome = string(s)
}

func main() {
	var nome string
	fmt.Println("Escreva seu nome: ")
	fmt.Scan(&nome)

	atualizar(&nome)
	fmt.Println("Nome Reverso: ", nome)

}

4-package main

import (
	"fmt"
	"strconv"
)

func main() {
	y := 1234
	updateDigits(&y)
	fmt.Println(y)
}

func updateDigits(y *int) {
	yStr := strconv.Itoa(*y)

	last := yStr[len(yStr)-1]
	secondLast := yStr[len(yStr)-2]

	lastI, _ := strconv.Atoi(string(last))
	secondLastI, _ := strconv.Atoi(string(secondLast))

	*y = lastI + secondLastI
}

5-package main

import (
	"fmt"
	"math"
)

func main() {
	var n float64
	var x *float64
func calculo(x *float64) {
	*x = (*x + math.Pi) / 2
}
fmt.Print("Digite um número: ")
	fmt.Scan(&n)
	x = &n

	calculo(x)
	fmt.Print("A média entre os valores é: ", n)
}

6-package main

import "fmt"

type Livro struct {
	Titulo string
	Autor  string
}

func modificarTitulo(book *Livro) {
	if book.Autor == "Anônimo" {
		book.Titulo = "Desconhecido"
	}
}

func main() {
	mybook := Livro{
		Titulo: "os miseraveis",
		Autor:  "Anônimo",
	}

	modificarTitulo(&mybook)

	fmt.Printf("O novo título do livro é: ", mybook)
}

7-package main

import "fmt"

type Conta struct {
	Titular string
	Saldo   float64
}

func main() {
	account := Conta{
		Titular: "Alex",
	}

	fmt.Println(account)

	n := &account
	novosaldo(n)

	fmt.Print(account)
}

func novosaldo(n *Conta) {
	fmt.Print("Informe o saldo da conta")
	fmt.Scan(&n.Saldo)
}

8-package main

import "fmt"
func New(m *int) {
	*m = 130
}

func main() {
	var n = 25
	var ptr = &x
	fmt.Println(n)
	New(m)
	fmt.Println(*m)
}

9-package main

import "fmt"

type L struct {
	Titulo string
	Autor  string
	Preco  float64
}

func Desconto(livro *book) {
	desconto := 0.10
	livro.Preco = livro.Preco - (livro.Preco * desconto)
}

func main() {
	mybook := book{
		Titulo: "os miseraveis",
		Autor:  "Victor Hugo",
		Preco:  136.0,
	}

	Desconto(&mybook)

	fmt.Printf("O novo preço do livro é: ", mybook)

10-package main

import "fmt"

func main() {
	sliceInt := []int{1, 2, 3, 4, 5, 4, 5, 5, 5, 5, 5, 6, 7, 8, 7, 8, 8}
	x := &sliceInt

	fmt.Println(sliceInt)
fillSliceWithPrimes(x)
	fmt.Println(sliceInt)
}

func fillSliceWithPrimes(x *[]int) {
	var isPrime bool
	var slicePrimes []int
	sliceInt := *x
	n := 2

	for len(slicePrimes) < len(sliceInt) {
		isPrime = true

		for i := 2; i < n; i++ {
			if n%i == 0 {
				isPrime = false
				break
			}
		}

		if isPrime {
			slicePrimes = append(slicePrimes, n)
		}

		n++
	}

	*x = slicePrimes
}
